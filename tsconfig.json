{
  "compilerOptions": {
    "target": "es6", // tsc가 최종적으로 컴파일하는 결과물의 문법 형태
    "lib": [ // 사용할 수 있는 특정 기능에 대한 문법(타입) 추가
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "baseUrl": "./src",
    "allowJs": true,
    "skipLibCheck": true, // 외부 라이브러리 사용시 .d.ts파일에 타입 정의가 잘못되어 오류가 나는 경우 - 타입검사를 생략시킴
    "esModuleInterop": true, // es6가 아닌 common js의 경우 import 호환안되는데 되게하는거
    "allowSyntheticDefaultImports": true,
    "strict": true, // type 검사 옵션 중 strict* 관련된 모든 것을 true로 만들게 된다.
    "forceConsistentCasingInFileNames": true,
    "noFallthroughCasesInSwitch": true,
    "module": "esnext", // 컴파일된 결과물이 사용하게 될 module 방식
    "moduleResolution": "node", // 모듈 해결 전략 - node.js 가 사용하는 방식으로 모듈을 찾음
    "resolveJsonModule": true,
    "isolatedModules": true, // 프로젝트 내 모든 각각의 소스코드 파일을 모듈로 만들기를 강제함 - 아닐시 에러 출력
    "noEmit": true, // true로 설정시 최종결과물이 나오지 않게 됨 
    "jsx": "react-jsx"
  },
  "include": [
    "src"
  ]
}
